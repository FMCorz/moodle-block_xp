define("block_xp/compat",["exports","core_form/dynamicform","core/modal","core/modal_factory","core_form/modalform","core/modal_registry","core/templates"],(function(_exports,_dynamicform,_modal,_modal_factory,_modalform,_modal_registry,_templates){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Compat.
   *
   * @module     block_xp/compat
   * @copyright  2024 Frédéric Massart
   * @author     Frédéric Massart <fred@branchup.tech>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.asyncRender=void 0,_exports.createModal=function(config){var _config$type;let ModalClass=arguments.length>1&&void 0!==arguments[1]?arguments[1]:_modal.default;if(IS_MODAL_TYPE_DEPRECATED)return delete config.type,ModalClass.create(config);const typeName=null!==(_config$type=config.type)&&void 0!==_config$type?_config$type:config.template;let type=_modal_registry.default.get(typeName);type||_modal_registry.default.register(typeName,ModalClass,config.template);return _modal_factory.default.create({...config,type:typeName})},_exports.getFormNode=function(form){try{return form.getFormNode()}catch(e){return form instanceof _modalform.default?form.modal.getRoot().find("form")[0]:form instanceof _dynamicform.default?form.container.querySelector("form"):document.createElement("form")}},_exports.markFormSubmitted=function(node){try{require("core_form/changechecker",(function(ChangeChecker){ChangeChecker.markFormSubmitted(node)}))}catch(e){void 0!==M.core_formchangechecker&&M.core_formchangechecker.set_form_submitted()}},_dynamicform=_interopRequireDefault(_dynamicform),_modal=_interopRequireDefault(_modal),_modal_factory=_interopRequireDefault(_modal_factory),_modalform=_interopRequireDefault(_modalform),_modal_registry=_interopRequireDefault(_modal_registry),_templates=_interopRequireDefault(_templates);const IS_MODAL_TYPE_DEPRECATED="create"in _modal.default;_exports.asyncRender=(name,context)=>"renderForPromise"in _templates.default?_templates.default.renderForPromise(name,context):new Promise(((resolve,reject)=>{_templates.default.render(name,context).then(((html,js)=>{resolve({html:html,js:js})})).catch((err=>{reject(err)}))}))}));

//# sourceMappingURL=compat.min.js.map