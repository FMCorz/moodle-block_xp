{"version":3,"file":"dialogue-base.min.js","sources":["../src/dialogue-base.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Generic dialogue base.\n *\n * This is originally a copy of block_stash/dialogue-base.\n *\n * @copyright  2018 Frédéric Massart\n * @author     Frédéric Massart <fred@branchup.tech>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/yui', 'core/str', 'core/notification'], function($, Y, Str, Notification) {\n    /**\n     * Constructor.\n     *\n     * Override it to inject your arguments.\n     */\n    function DialogueBase() {\n        this._eventNode = $('<div>');\n        var deferred = $.Deferred();\n        this._ready = deferred.promise();\n        Y.use(\n            'moodle-core-notification',\n            function() {\n                this._init().then(function() {\n                    deferred.resolve();\n                    return;\n                }).catch(Notification.exception);\n            }.bind(this)\n        );\n    }\n\n    DialogueBase.prototype._dialogue = null;\n    DialogueBase.prototype._eventNode = null;\n    DialogueBase.prototype._ready = null;\n    DialogueBase.prototype._title = '&hellip;';\n\n    /**\n     * Center the dialogue on screen.\n     */\n    DialogueBase.prototype.center = function() {\n        this._dialogue.centerDialogue();\n    };\n\n    /**\n     * Initialise the things.\n     *\n     * @return {Void}\n     */\n    DialogueBase.prototype._init = function() {\n        var deferred = $.Deferred(),\n            loading = Y.Node.create('<p style=\"text-align: center;\"><img src=\"' + M.util.image_url('y/loading') + '\" alt=\"\"></p>'),\n            d;\n\n        // New dialogue.\n        d = new M.core.dialogue({\n            draggable: true,\n            modal: true,\n            width: '600px'\n        });\n        this._dialogue = d;\n\n        // Destroy on hide.\n        var origHide = d.hide;\n        d.hide = function() {\n            origHide.apply(d, arguments);\n            this.destroy();\n        }.bind(d);\n\n        // Set content.\n        d.getStdModNode(Y.WidgetStdMod.HEADER).prepend(Y.Node.create('<h1>'));\n        this._updateDialogueTitle();\n        this._setDialogueContent(loading);\n        deferred.resolve();\n\n        // Render the things.\n        this._render().fail(\n            function() {\n                Str.get_string('error', 'core') /* eslint-disable-line */\n                    .then(function(a) {\n                        return a;\n                    })\n                    .fail(function() {\n                        return '';\n                    })\n                    .always(\n                        function(txt) {\n                            this._setDialogueContent(txt);\n                        }.bind(this)\n                    );\n            }.bind(this)\n        );\n\n        // Return the promise.\n        return deferred.promise();\n    };\n\n    DialogueBase.prototype.close = function() {\n        this.trigger('dialogue-closed');\n        this._dialogue.destroy();\n        this._eventNode = null;\n    };\n\n    /**\n     * Find a node in this Dialog.\n     *\n     * @param {String} selector The selector.\n     * @return {jQuery}\n     */\n    DialogueBase.prototype.find = function(selector) {\n        return $(this._dialogue.getStdModNode(Y.WidgetStdMod.BODY).getDOMNode()).find(selector);\n    };\n\n    /**\n     * Registers an event listener.\n     *\n     * @param {String} type The event type.\n     * @param {Function} callback The callback, receives Event and extraArgs.\n     */\n    DialogueBase.prototype.on = function(type, callback) {\n        this._eventNode.on(type, callback);\n    };\n\n    /**\n     * Render mechanics.\n     *\n     * This is the method to override to set the content of the dialogue.\n     * It must be non-blocking. Also do not forget to center the dialogue.\n     */\n    DialogueBase.prototype._render = function() {\n        // Nothing here.\n    };\n\n    /**\n     * Initialise the things.\n     *\n     * @param {Event} e The event.\n     */\n    DialogueBase.prototype.show = function(e) {\n        this._ready.then(\n            function() {\n                this._dialogue.show(e);\n                return;\n            }.bind(this)\n        ).catch(Notification.exception);\n    };\n\n    /**\n     * Set the dialogue content.\n     *\n     * @param {String} content The HTML content.\n     */\n    DialogueBase.prototype._setDialogueContent = function(content) {\n        this._dialogue.setStdModContent(Y.WidgetStdMod.BODY, content, Y.WidgetStdMod.REPLACE);\n    };\n\n    /**\n     * Set the dialogue title.\n     *\n     * @param {String} title The title.\n     */\n    DialogueBase.prototype.setTitle = function(title) {\n        this._title = title;\n        this._updateDialogueTitle();\n    };\n\n    /**\n     * Triggers an event.\n     *\n     * @param {String} type The event type.\n     * @param {Mixed} extraArgs The extra argument.\n     */\n    DialogueBase.prototype.trigger = function(type, extraArgs) {\n        this._eventNode.trigger(type, extraArgs);\n    };\n\n    /**\n     * Update the dialogue title.\n     */\n    DialogueBase.prototype._updateDialogueTitle = function() {\n        if (!this._dialogue) {\n            return;\n        }\n\n        this._dialogue\n            .getStdModNode(Y.WidgetStdMod.HEADER)\n            .one('h1')\n            .setHTML(this._title);\n    };\n\n    return DialogueBase;\n});\n"],"names":["define","$","Y","Str","Notification","DialogueBase","_eventNode","deferred","Deferred","_ready","promise","use","_init","then","resolve","catch","exception","bind","this","prototype","_dialogue","_title","center","centerDialogue","d","loading","Node","create","M","util","image_url","core","dialogue","draggable","modal","width","origHide","hide","apply","arguments","destroy","getStdModNode","WidgetStdMod","HEADER","prepend","_updateDialogueTitle","_setDialogueContent","_render","fail","get_string","a","always","txt","close","trigger","find","selector","BODY","getDOMNode","on","type","callback","show","e","content","setStdModContent","REPLACE","setTitle","title","extraArgs","one","setHTML"],"mappings":";;;;;;;;;AAyBAA,gCAAO,CAAC,SAAU,WAAY,WAAY,sBAAsB,SAASC,EAAGC,EAAGC,IAAKC,uBAMvEC,oBACAC,WAAaL,EAAE,aAChBM,SAAWN,EAAEO,gBACZC,OAASF,SAASG,UACvBR,EAAES,IACE,2BACA,gBACSC,QAAQC,MAAK,WACdN,SAASO,aAEVC,MAAMX,aAAaY,YACxBC,KAAKC,cAIfb,aAAac,UAAUC,UAAY,KACnCf,aAAac,UAAUb,WAAa,KACpCD,aAAac,UAAUV,OAAS,KAChCJ,aAAac,UAAUE,OAAS,WAKhChB,aAAac,UAAUG,OAAS,gBACvBF,UAAUG,kBAQnBlB,aAAac,UAAUP,MAAQ,eAGvBY,EAFAjB,SAAWN,EAAEO,WACbiB,QAAUvB,EAAEwB,KAAKC,OAAO,4CAA8CC,EAAEC,KAAKC,UAAU,aAAe,iBAI1GN,EAAI,IAAII,EAAEG,KAAKC,SAAS,CACpBC,WAAW,EACXC,OAAO,EACPC,MAAO,eAENf,UAAYI,MAGbY,SAAWZ,EAAEa,YACjBb,EAAEa,KAAO,WACLD,SAASE,MAAMd,EAAGe,gBACbC,WACPvB,KAAKO,GAGPA,EAAEiB,cAAcvC,EAAEwC,aAAaC,QAAQC,QAAQ1C,EAAEwB,KAAKC,OAAO,cACxDkB,4BACAC,oBAAoBrB,SACzBlB,SAASO,eAGJiC,UAAUC,KACX,WACI7C,IAAI8C,WAAW,QAAS,QACnBpC,MAAK,SAASqC,UACJA,KAEVF,MAAK,iBACK,MAEVG,OACG,SAASC,UACAN,oBAAoBM,MAC3BnC,KAAKC,QAEjBD,KAAKC,OAIJX,SAASG,WAGpBL,aAAac,UAAUkC,MAAQ,gBACtBC,QAAQ,wBACRlC,UAAUoB,eACVlC,WAAa,MAStBD,aAAac,UAAUoC,KAAO,SAASC,iBAC5BvD,EAAEiB,KAAKE,UAAUqB,cAAcvC,EAAEwC,aAAae,MAAMC,cAAcH,KAAKC,WASlFnD,aAAac,UAAUwC,GAAK,SAASC,KAAMC,eAClCvD,WAAWqD,GAAGC,KAAMC,WAS7BxD,aAAac,UAAU4B,QAAU,aASjC1C,aAAac,UAAU2C,KAAO,SAASC,QAC9BtD,OAAOI,KACR,gBACSO,UAAU0C,KAAKC,IAEtB9C,KAAKC,OACTH,MAAMX,aAAaY,YAQzBX,aAAac,UAAU2B,oBAAsB,SAASkB,cAC7C5C,UAAU6C,iBAAiB/D,EAAEwC,aAAae,KAAMO,QAAS9D,EAAEwC,aAAawB,UAQjF7D,aAAac,UAAUgD,SAAW,SAASC,YAClC/C,OAAS+C,WACTvB,wBASTxC,aAAac,UAAUmC,QAAU,SAASM,KAAMS,gBACvC/D,WAAWgD,QAAQM,KAAMS,YAMlChE,aAAac,UAAU0B,qBAAuB,WACrC3B,KAAKE,gBAILA,UACAqB,cAAcvC,EAAEwC,aAAaC,QAC7B2B,IAAI,MACJC,QAAQrD,KAAKG,SAGfhB"}