{"version":3,"file":"cm-rule.min.js","sources":["../src/cm-rule.js"],"sourcesContent":["// This file is part of Level Up XP.\n//\n// Level Up XP is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Level Up XP is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Level Up XP.  If not, see <https://www.gnu.org/licenses/>.\n//\n// https://levelup.plus\n\n/**\n * Course module rule.\n *\n * @author     Frédéric Massart <fred@branchup.tech>\n * @copyright  2018 Frédéric Massart\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/templates', 'core/str', 'block_xp/dialogue-base'], function($, Templates, Str, DialogueBase) {\n    var SELECTOR_WRAPPER = '.block-xp-filters';\n    var SELECTOR_WIDGET = '.block_xp-cm-rule-widget';\n    var SELECTOR_WIDGET_TRIGGER = '.block_xp-cm-rule-widget button';\n    var SELECTOR_RESOURCE_SELECTOR_WRAPPER = '.block_xp-cm-selector-widget';\n\n    /**\n     * The dialogue.\n     *\n     * @param {Object} [initWithCourse] The course to initialise with.\n     */\n    function Dialogue(initWithCourse) {\n        this.initWithCourse = initWithCourse || null;\n        DialogueBase.prototype.constructor.apply(this, []);\n    }\n    Dialogue.prototype = Object.create(DialogueBase.prototype);\n    Dialogue.prototype.constructor = Dialogue;\n\n    /**\n     * Render.\n     *\n     * @return {Promise} The promise.\n     */\n    Dialogue.prototype._render = function() {\n        var initWithCourseJson = JSON.stringify(this.initWithCourse);\n        return Str.get_string('cmselector', 'block_xp').then(\n            function(title) {\n                return Templates.render('block_xp/cm-selector', {\n                    initwithcoursejson: initWithCourseJson\n                }).then(\n                    function(html, js) {\n                        this.setTitle(title);\n                        this._setDialogueContent(html);\n                        Templates.runTemplateJS(js);\n                        this.center();\n                        this.find(SELECTOR_RESOURCE_SELECTOR_WRAPPER).on(\n                            'cm-selected',\n                            function(e, resource) {\n                                this.trigger('cm-selected', resource);\n                                this.close();\n                            }.bind(this)\n                        );\n                    }.bind(this)\n                );\n            }.bind(this)\n        );\n    };\n\n    /**\n     * Initialise the widgets.\n     *\n     * @param {Object} [initWithCourse] The course to initialise with.\n     */\n    function init(initWithCourse) {\n        $(SELECTOR_WRAPPER).on('click', SELECTOR_WIDGET_TRIGGER, function(e) {\n            e.preventDefault();\n            var node = $(e.target).closest(SELECTOR_WIDGET);\n            if (!node) {\n                return;\n            }\n\n            var d = new Dialogue(initWithCourse);\n            d.on('cm-selected', function(e, resource) {\n                var cm = resource.cm;\n                var course = resource.course;\n                node.find('.cm-rule-contextid').val(cm.contextid);\n                node.find('.cm-selected').text(\n                    M.util.get_string('rulecmdescwithcourse', 'block_xp', {\n                        contextname: cm.name,\n                        coursename: course.shortname\n                    })\n                );\n                node.addClass('has-cm');\n            });\n            d.show();\n        });\n    }\n\n    return {\n        init: init\n    };\n});\n"],"names":["define","$","Templates","Str","DialogueBase","Dialogue","initWithCourse","prototype","constructor","apply","this","Object","create","_render","initWithCourseJson","JSON","stringify","get_string","then","title","render","initwithcoursejson","html","js","setTitle","_setDialogueContent","runTemplateJS","center","find","on","e","resource","trigger","close","bind","init","preventDefault","node","target","closest","d","cm","course","val","contextid","text","M","util","contextname","name","coursename","shortname","addClass","show"],"mappings":";;;;;;;AAwBAA,0BAAO,CAAC,SAAU,iBAAkB,WAAY,2BAA2B,SAASC,EAAGC,UAAWC,IAAKC,uBAW1FC,SAASC,qBACTA,eAAiBA,gBAAkB,KACxCF,aAAaG,UAAUC,YAAYC,MAAMC,KAAM,WAEnDL,SAASE,UAAYI,OAAOC,OAAOR,aAAaG,WAChDF,SAASE,UAAUC,YAAcH,SAOjCA,SAASE,UAAUM,QAAU,eACrBC,mBAAqBC,KAAKC,UAAUN,KAAKJ,uBACtCH,IAAIc,WAAW,aAAc,YAAYC,KAC5C,SAASC,cACEjB,UAAUkB,OAAO,uBAAwB,CAC5CC,mBAAoBP,qBACrBI,KACC,SAASI,KAAMC,SACNC,SAASL,YACTM,oBAAoBH,MACzBpB,UAAUwB,cAAcH,SACnBI,cACAC,KA/BgB,gCA+ByBC,GAC1C,cACA,SAASC,EAAGC,eACHC,QAAQ,cAAeD,eACvBE,SACPC,KAAKxB,QAEbwB,KAAKxB,QAEbwB,KAAKxB,QAkCR,CACHyB,cA1BU7B,gBACVL,EArDmB,qBAqDC4B,GAAG,QAnDG,mCAmD+B,SAASC,GAC9DA,EAAEM,qBACEC,KAAOpC,EAAE6B,EAAEQ,QAAQC,QAtDT,+BAuDTF,UAIDG,EAAI,IAAInC,SAASC,gBACrBkC,EAAEX,GAAG,eAAe,SAASC,EAAGC,cACxBU,GAAKV,SAASU,GACdC,OAASX,SAASW,OACtBL,KAAKT,KAAK,sBAAsBe,IAAIF,GAAGG,WACvCP,KAAKT,KAAK,gBAAgBiB,KACtBC,EAAEC,KAAK9B,WAAW,uBAAwB,WAAY,CAClD+B,YAAaP,GAAGQ,KAChBC,WAAYR,OAAOS,aAG3Bd,KAAKe,SAAS,aAElBZ,EAAEa"}