{"version":3,"file":"modal-form.min.js","sources":["../src/modal-form.js"],"sourcesContent":["// This file is part of Level Up XP.\n//\n// Level Up XP is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Level Up XP is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Level Up XP.  If not, see <https://www.gnu.org/licenses/>.\n//\n// https://levelup.plus\n\n/**\n * Modal form.\n *\n * @module     block_xp/modal-form\n * @copyright  2024 Frédéric Massart\n * @author     Frédéric Massart <fred@branchup.tech>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport * as Compat from 'block_xp/compat';\nimport * as RoleButton from 'block_xp/role-button';\nimport {extractNodeData} from 'block_xp/utils';\n\nconst getButton = (modalForm, action) => {\n    const saveBtnJq = modalForm.modal.getFooter().find(modalForm.modal.getActionSelector(action));\n    return saveBtnJq.length ? saveBtnJq[0] : null;\n};\n\n/**\n * Open the modal.\n *\n * @param {Node} node The node.\n */\nfunction open(node) {\n    const formClass = node.dataset.formClass;\n    const formArgs = extractNodeData(node, 'formArgs');\n    const modalConfig = extractNodeData(node, 'modal');\n\n    const finalModalConfig = {\n        title: modalConfig.title ?? node.textContent.trim().slice(0, 100),\n    };\n    if ('large' in modalConfig) {\n        finalModalConfig.large = Boolean(modalConfig.large);\n    }\n\n    var modalForm = new ModalForm({\n        formClass: formClass,\n        args: formArgs,\n        returnFocus: node,\n        saveButtonText: modalConfig.saveButtonText,\n        modalConfig: finalModalConfig\n    });\n    modalForm.addEventListener(modalForm.events.LOADED, () => {\n        const root = modalForm.modal.getRoot();\n        root.addClass('block_xp');\n\n        // Set the save button text.\n        const saveBtn = getButton(modalForm, 'save');\n        if (saveBtn && modalConfig.buttons?.save) {\n            if (modalConfig.buttons.save?.label) {\n                saveBtn.textContent = modalConfig.buttons.save?.label;\n            }\n            if (modalConfig.buttons.save?.danger) {\n                saveBtn.classList.remove('btn-primary');\n                saveBtn.classList.add('btn-danger');\n            }\n            if (modalConfig.buttons.save?.disabled) {\n                saveBtn.setAttribute('disabled', '');\n            }\n        }\n    });\n\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        e.preventDefault();\n\n        // We must mark the form as submitted because the core modalform sets it back\n        // to not having been sent, and we'll reload the page so when the form only\n        // has one field, this may be an issue.\n        Compat.markFormSubmitted(Compat.getFormNode(modalForm));\n\n        if (e.detail && e.detail.redirecturl) {\n            window.location.href = M.cfg.wwwroot + e.detail.redirecturl;\n        } else {\n            window.location.reload();\n        }\n\n        // We hide the modal after a little while in case we stayed on the page.\n        setTimeout(() => {\n            modalForm.modal.hide();\n        }, 1000);\n    });\n\n    modalForm.show();\n}\n\n/**\n * Delegate open.\n * @param {String} rootSelector The root selector.\n * @param {String} selector The selector.\n */\nexport function delegateOpen(rootSelector, selector) {\n    RoleButton.delegateClick(rootSelector, selector, (node) => {\n        open(node);\n    });\n}\n\n/**\n * Register open.\n * @param {String} selector The selector.\n */\nexport function registerOpen(selector) {\n    RoleButton.registerClick(selector, (node) => {\n        open(node);\n    });\n}\n\nlet simpleOpenFormActionObserverRegistered = false;\nconst simpleOpenFormActionObserverSelector = '[data-xp-action=\"open-form\"][data-form-class]';\n\n/**\n * Register simple open form action observer.\n */\nexport function registerSimpleOpenFormActionObserver() {\n    if (simpleOpenFormActionObserverRegistered) {\n        return;\n    }\n    simpleOpenFormActionObserverRegistered = true;\n    delegateOpen('body', simpleOpenFormActionObserverSelector);\n}\n"],"names":["selector","RoleButton","registerClick","node","open","simpleOpenFormActionObserverRegistered","delegateOpen","formClass","dataset","formArgs","modalConfig","finalModalConfig","title","textContent","trim","slice","large","Boolean","modalForm","ModalForm","args","returnFocus","saveButtonText","addEventListener","events","LOADED","modal","getRoot","addClass","saveBtn","action","saveBtnJq","getFooter","find","getActionSelector","length","getButton","buttons","_modalConfig$buttons","save","_modalConfig$buttons$","label","_modalConfig$buttons$2","_modalConfig$buttons$3","danger","classList","remove","add","_modalConfig$buttons$4","disabled","setAttribute","FORM_SUBMITTED","e","preventDefault","Compat","markFormSubmitted","getFormNode","detail","redirecturl","window","location","href","M","cfg","wwwroot","reload","setTimeout","hide","show","rootSelector","delegateClick"],"mappings":";;;;;;;;sjCAsH6BA,UACzBC,WAAWC,cAAcF,UAAWG,OAChCC,KAAKD,sEAWLE,8CAGJA,wCAAyC,EACzCC,aAAa,OAV4B,+MApFpCF,KAAKD,mCACJI,UAAYJ,KAAKK,QAAQD,UACzBE,UAAW,0BAAgBN,KAAM,YACjCO,aAAc,0BAAgBP,KAAM,SAEpCQ,iBAAmB,CACrBC,iCAAOF,YAAYE,uDAAST,KAAKU,YAAYC,OAAOC,MAAM,EAAG,MAE7D,UAAWL,cACXC,iBAAiBK,MAAQC,QAAQP,YAAYM,YAG7CE,UAAY,IAAIC,mBAAU,CAC1BZ,UAAWA,UACXa,KAAMX,SACNY,YAAalB,KACbmB,eAAgBZ,YAAYY,eAC5BZ,YAAaC,mBAEjBO,UAAUK,iBAAiBL,UAAUM,OAAOC,QAAQ,8BACnCP,UAAUQ,MAAMC,UACxBC,SAAS,kBAGRC,QAlCI,EAACX,UAAWY,gBACpBC,UAAYb,UAAUQ,MAAMM,YAAYC,KAAKf,UAAUQ,MAAMQ,kBAAkBJ,gBAC9EC,UAAUI,OAASJ,UAAU,GAAK,MAgCrBK,CAAUlB,UAAW,WACjCW,sCAAWnB,YAAY2B,yCAAZC,qBAAqBC,KAAM,iIAClC7B,YAAY2B,QAAQE,uCAApBC,sBAA0BC,MAC1BZ,QAAQhB,2CAAcH,YAAY2B,QAAQE,8CAApBG,uBAA0BD,qCAEhD/B,YAAY2B,QAAQE,wCAApBI,uBAA0BC,SAC1Bf,QAAQgB,UAAUC,OAAO,eACzBjB,QAAQgB,UAAUE,IAAI,8CAEtBrC,YAAY2B,QAAQE,wCAApBS,uBAA0BC,UAC1BpB,QAAQqB,aAAa,WAAY,QAK7ChC,UAAUK,iBAAiBL,UAAUM,OAAO2B,gBAAiBC,IACzDA,EAAEC,iBAKFC,OAAOC,kBAAkBD,OAAOE,YAAYtC,YAExCkC,EAAEK,QAAUL,EAAEK,OAAOC,YACrBC,OAAOC,SAASC,KAAOC,EAAEC,IAAIC,QAAUZ,EAAEK,OAAOC,YAEhDC,OAAOC,SAASK,SAIpBC,YAAW,KACPhD,UAAUQ,MAAMyC,SACjB,QAGPjD,UAAUkD,gBAQE9D,aAAa+D,aAAcrE,UACvCC,WAAWqE,cAAcD,aAAcrE,UAAWG,OAC9CC,KAAKD,aAcTE,wCAAyC"}